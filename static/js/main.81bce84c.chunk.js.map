{"version":3,"sources":["components/SearchBar.js","components/ApiVideo.js","components/VideoList.js","components/Search.js","components/SelectedVideo.js","components/Library.js","components/SingleCustomer.js","components/Customers.js","VHS.jpg","popcorn.png","cow.png","components/CheckOut.js","components/CheckIn.js","App.js","registerServiceWorker.js","index.js"],"names":["SearchBar","props","onSubmit","e","preventDefault","resetCallback","htmlFor","className","value","searchQuery","onInput","setSearchQuery","target","type","id","placeholder","name","Button","ApiVideo","src","imageUrl","alt","title","Date","releaseDate","getFullYear","onClick","event","addVideoCallback","externalId","overview","inventory","VideoList","useState","videoList","setVideoList","errorMessage","setErrorMessage","useEffect","keyWord","axios","get","url","focus","then","response","apiVideoList","data","length","catch","error","message","addVideo","video","post","videoComponents","map","release_date","image_url","external_id","data-testid","includes","Search","search","window","location","query","URLSearchParams","SelectedVideo","Table","striped","bordered","hover","variant","size","selectedVideo","available_inventory","Library","videoLibrary","setVideoLibrary","apiVideoLibrary","renderTableData","newSelectedVideo","selectVideoCallback","SingleCustomer","selectCustomerCallback","accountCredit","videosCheckedOutCount","address","city","state","postalCode","phone","registeredAt","Customers","customerList","setCustomerList","newCustomerList","customerComponents","customer","account_credit","videos_checked_out_count","postal_code","registered_at","CheckOut","checkOutCallback","dueDate","setDate","getDate","toString","split","toISOString","disabled","CheckIn","checkInCallback","returned","BASE_URL","App","setSelectedVideo","selectedCustomer","setSelectedCustomer","vhs","Navbar","bg","Nav","to","Link","class","rental","path","component","videoData","Home","popcorn","cow","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.81bce84c.chunk.js","sourcesContent":["import React from 'react';\nimport './SearchBar.css';\nimport { Navbar, Nav, NavLink,Form, FormControl, Button, Image } from 'react-bootstrap'\n\nconst SearchBar = (props) => {\n\n  const clearSubmit = (e) => {\n    e.preventDefault();\n    props.resetCallback()\n  }\n\n  return (\n    <form\n      onSubmit={clearSubmit}\n    >\n      <label htmlFor=\"header-search\">\n        <span className=\"visually-hidden\" >\n          <h2>Search Video Library</h2>\n        </span>\n      </label>\n      <input\n        value={props.searchQuery}\n        onInput={(e) => props.setSearchQuery(e.target.value)}\n        type=\"text\"\n        id=\"api-search\"\n        placeholder=\"Search Video Library\"\n        name=\"s\"\n      />\n      <Button type=\"submit\">Clear Search</Button>\n    </form>\n  );\n};\n\nexport default SearchBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ApiVideo.css';\n\nconst ApiVideo = (props) => {\n  // event handlers\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    props.addVideoCallback({\n      externalId: props.externalId, \n      title: props.title,\n      overview: props.overview,\n      releaseDate: props.releaseDate,\n      imageUrl: props.imageUrl,    \n      inventory: 10,\n    });\n  }\n\n  return (\n    <figure className=\"video\">\n      <img src={props.imageUrl} alt={props.title} />\n      <figcaption>{props.title} \n        <br/>{new Date(props.releaseDate).getFullYear()}\n        <br/> \n          <button\n            className=\"btn btn-outline-primary btn-sm\"\n            onClick={onFormSubmit}>\n            Add to Library\n          </button>\n      </figcaption>\n    </figure> \n  )\n}\n\nApiVideo.propTypes = {\n  title: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  releaseDate: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  externalId: PropTypes.number.isRequired,\n  addVideoCallback: PropTypes.func.isRequired,\n};\n\nexport default ApiVideo;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport ApiVideo from './ApiVideo';\nimport './VideoList.css';\n\n\nconst VideoList = (props) => {\n  const [videoList, setVideoList] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    if (props.keyWord !== '') {\n      const source = axios.get(`${props.url}${props.focus}?query=${props.keyWord}`)\n        .then((response) => {\n          const apiVideoList = response.data;\n          if (apiVideoList.length !== 0) {\n            setVideoList([...apiVideoList]);\n            setErrorMessage(null)\n          } else {\n            setErrorMessage(`Unable to find \"${props.keyWord}\"`)\n            setVideoList([])\n          }\n        })\n        .catch((error) => {\n          setErrorMessage(error.message);\n        });\n    } else {\n      setVideoList([])\n      setErrorMessage(null)\n    }\n  }, [props.keyWord]);\n\n  const addVideo = (video) => {\n    axios.post(`${props.url}${props.focus}?external_id=${video.externalId}&release_date=${video.releaseDate}&image_url=${video.imageUrl}`, video)\n    .then((response) => {\n      setErrorMessage(`\"${video.title}\" is added`);\n    })\n    .catch((error) => {\n      setErrorMessage(`You already have \"${video.title}\"`);\n    });\n  }\n\n  const videoComponents = videoList.map((video) => {\n    return (\n      <ApiVideo\n        title={video.title}\n        overview={video.overview}\n        releaseDate={video.release_date}\n        imageUrl={video.image_url}\n        externalId={video.external_id}\n        addVideoCallback={addVideo}\n      />\n    )\n  })\n  return (\n    <div data-testid={props.keyWord}>\n      <h4 className={errorMessage ? (errorMessage.includes('already') ? 'text-warning border border-warning' : 'text-success border border-success') : ''}>\n        {errorMessage ? `${errorMessage}` : ''}\n      </h4>\n      <div className=\"list\">\n        {videoComponents}\n      </div>\n    </div>\n  )\n};\nVideoList.propTypes = {\n  videos: PropTypes.arrayOf(PropTypes.shape(\n    { title: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      releaseDate: PropTypes.string.isRequired,\n      imageUrl: PropTypes.string.isRequired,\n      externalId: PropTypes.number.isRequired,\n    },\n  )),\n  url:PropTypes.string.isRequired,\n  focus: PropTypes.string.isRequired,\n  keyWord: PropTypes.string.isRequired,\n};\n\nexport default VideoList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport SearchBar from './SearchBar';\nimport VideoList from './VideoList';\n\nconst Search = (props) => {\n  const { search } = window.location;\n  const query = new URLSearchParams(search).get('s');\n  const [searchQuery, setSearchQuery] = useState(query || '');\n  \n  const resetSearch = () => {\n    setSearchQuery('')\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h2 className=\"display-5 m-4 pb-5\">Search Video Library</h2>\n      </header>\n      <SearchBar searchQuery={searchQuery}\n                 setSearchQuery={setSearchQuery}\n                 resetCallback={resetSearch}/>\n      <VideoList keyWord={searchQuery}\n                 url={props.url}\n                 focus={props.focus} />\n    </div>\n  );\n}\n\nSearch.propTypes = {\n  url:PropTypes.string.isRequired,\n  focus: PropTypes.string.isRequired,\n};\n\nexport default Search;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import './SelectedVideo.css';\nimport { Navbar, Nav, NavLink,Form, FormControl, Button, Image, Table } from 'react-bootstrap'\n\nconst SelectedVideo = (props) => {  \n  return (\n    <Table striped bordered hover variant='dark' size='sm'>\n      <thead>\n        <tr>\n          <th>Title</th> \n          <th>Image</th>  \n          <th>Overview</th>\n          <th>Release Date</th>\n          <th>Inventory</th>\n          <th>Available Inventory</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{props.selectedVideo.title}</td>\n          <td><img src={props.selectedVideo.image_url} alt={props.selectedVideo.title} /></td>\n          <td>{props.selectedVideo.overview}</td>\n          <td>{props.selectedVideo.release_date}</td>\n          <td>{props.selectedVideo.inventory}</td>\n          <td>{props.selectedVideo.available_inventory}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n};\n\n// SelectedVideo.propTypes = {\n//   selectedVideo: PropTypes.arrayOf(PropTypes.shape(\n//     {\n//       title: PropTypes.string,\n//       overview: PropTypes,\n//       inventory: PropTypes.number,\n//     },\n//   )),\n// };\n\nexport default SelectedVideo","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap'\nimport SelectedVideo from './SelectedVideo'\nimport { Navbar, Nav, NavLink,Form, FormControl, Button, Image } from 'react-bootstrap'\n\n\nconst Library = (props) => {\n  const [videoLibrary, setVideoLibrary] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    axios.get(props.url)\n      .then((response) => {\n        const apiVideoLibrary = response.data;\n        setVideoLibrary(apiVideoLibrary);\n      })\n      .catch((error) => {\n        setErrorMessage(error.message);\n      });\n  }, []);\n\n  const selectVideo = (title) => {\n    axios.get(`${props.url}${props.focus}${ title }`)\n      .then((response) => {\n        const newSelectedVideo = response.data\n        props.selectVideoCallback(newSelectedVideo)\n        setErrorMessage(`Success! Selected ${ title }`);\n        // setErrorMessage(` Selected ${ title }`);\n      })\n      .catch((error) => {\n        setErrorMessage(`Unable to select \"${ title }\"`);\n      });\n  }\n\n  const renderTableData = videoLibrary.map((video) => {\n    return (\n      <tr key={video.id}>\n        <td>\n          <Button className='table-button'\n            onClick={() => selectVideo(video.title)}\n          >\n            Select\n          </Button>\n        </td>\n        <td>{video.id}</td>\n        <td>{video.title}</td>\n        <td>{video.overview}</td>\n        <td>{video.release_date}</td>\n      </tr>\n    )\n  });\n\n  return (\n    <div>\n      <h2 className=\"display-5 m-4 pb-5\">Video Library</h2>\n      {/* <h2 className={errorMessage ? (errorMessage.includes('Success') ? 'text-success' : 'text-warning') : ''}>\n        {errorMessage ? `${errorMessage}` : ''}\n      </h2> */}\n      {props.selectedVideo? < SelectedVideo selectedVideo={props.selectedVideo}/> : ''}\n\n        <Table striped bordered hover variant=\"light\">\n          <thead>\n            <tr>\n              <th>Select</th>\n              <th>Video ID</th>  \n              <th>Title</th>\n              <th>Overview</th>\n              <th>Release Date</th>\n            </tr>\n          </thead>\n          <tbody>  \n            {renderTableData}\n          </tbody>\n        </Table>\n    </div>\n  )\n}\n\nLibrary.propTypes = {\n  url:PropTypes.string.isRequired,\n  focus: PropTypes.string.isRequired,\n  selectVideoCallback: PropTypes.func.isRequired,\n  selectedVideo: PropTypes.object,\n};\n\nexport default Library\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Navbar, Nav, NavLink,Form, FormControl, Button, Image } from 'react-bootstrap'\n\nconst SingleCustomer = (props) => {\n  const onSelect = (event) => {\n    event.preventDefault();\n    props.selectCustomerCallback({\n      id: props.id   \n    });\n  }\n\n  return (\n    <tr>\n      <td>\n        <Button\n          onClick={onSelect}>\n            Select\n        </Button>\n      </td>\n      <td>{props.id}</td>  \n      <td>{props.name}</td>\n      <td>{props.accountCredit}</td>\n      <td>{props.videosCheckedOutCount}</td>\n      <td>{props.address}</td>\n      <td>{props.city}</td>\n      <td>{props.state}</td>\n      <td>{props.postalCode}</td>\n      <td>{props.phone}</td>\n      <td>{props.registeredAt}</td>\n    </tr>\n  )\n}\n  \nSingleCustomer.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  accountCredit: PropTypes.number.isRequired,\n  videosCheckedOutCount: PropTypes.number.isRequired,\n  address: PropTypes.string.isRequired,\n  city: PropTypes.string.isRequired,\n  state: PropTypes.string.isRequired,\n  postalCode: PropTypes.number.isRequired,\n  phone: PropTypes.number.isRequired,\n  registeredAt: PropTypes.number.isRequired,\n  selectCustomerCallback: PropTypes.func.isRequired,\n};\n\nexport default SingleCustomer;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap'\nimport SingleCustomer from './SingleCustomer';\n\nconst Customers = (props) => {\n  const [customerList, setCustomerList] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    axios.get(`${props.url}${props.focus}`)\n      .then((response) => {\n        const newCustomerList = response.data;\n        if (newCustomerList.length !== 0) {\n          setCustomerList([...newCustomerList]);\n        } else {\n          setCustomerList(newCustomerList)\n        }\n      })\n      .catch((error) => {\n        setErrorMessage(error.message);\n      });\n  }, [customerList]);\n\n  const customerComponents = customerList.map((customer) => {\n    return (\n      <SingleCustomer\n        id={customer.id}\n        name={customer.name}\n        accountCredit={customer.account_credit}\n        videosCheckedOutCount={customer.videos_checked_out_count}\n        address={customer.address}\n        city={customer.city}\n        state={customer.state}\n        postalCode={customer.postal_code}\n        phone={customer.phone}\n        registeredAt={customer.registered_at}\n        selectCustomerCallback={props.selectCustomerCallback}\n      />\n    )\n  })\n  return (\n    <div>\n      <h2 className=\"display-5 m-4 pb-5\">Customer List</h2>\n      <div className=\"validation-errors-display\">\n        <h2 className=\"validation-errors-display__list\">\n          {errorMessage ? `${errorMessage}` : ''}\n        </h2>\n      </div>\n      <Table striped bordered hover variant=\"light\">\n        <thead>\n          <tr>\n            <th>Select</th>\n            <th>Id</th>  \n            <th>Name</th>\n            <th>Account Credit</th>\n            <th># of Videos Out</th>\n            <th>Address</th>\n            <th>City</th>\n            <th>State</th>\n            <th>Postal Code</th>\n            <th>Phone #</th>\n            <th>Registered At</th>\n          </tr>\n        </thead>\n        <tbody>\n          {customerComponents}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nCustomers.propTypes = {\n  url:PropTypes.string.isRequired,\n  focus: PropTypes.string.isRequired,\n  selectCustomerCallback: PropTypes.func.isRequired,\n};\n\nexport default Customers;","export default __webpack_public_path__ + \"static/media/VHS.85e0ab7b.jpg\";","export default __webpack_public_path__ + \"static/media/popcorn.980aa763.png\";","export default __webpack_public_path__ + \"static/media/cow.3dc396f8.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap'\n\nconst CheckOut = (props) => {\n  // event handlers\n  const onSubmit = (event) => {\n    event.preventDefault();\n    \n    props.checkOutCallback({\n      customer: props.customer,\n      video: props.video,\n      dueDate: new Date(new Date(new Date().setDate(new Date().getDate()+7)).toString().split('GMT')[0]+' UTC').toISOString().split('.')[0]   \n    });\n  }\n\n  return (\n    <div>\n      <Button variant=\"outline-info\"\n          onClick={onSubmit}\n          disabled={!props.customer || !props.video} >\n            Check Out\n      </Button>\n    </div>\n  );\n}\n\nCheckOut.propTypes = {\n  customer:PropTypes.number.isRequired,\n  video: PropTypes.string.isRequired,\n  checkOutCallback: PropTypes.func.isRequired,\n};\n\nexport default CheckOut;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap'\n\nconst CheckIn = (props) => {\n  // event handlers\n  const onSubmit = (event) => {\n    event.preventDefault();\n    \n    props.checkInCallback({\n      customer: props.customer,\n      video: props.video,\n      returned: true\n    });\n  }\n\n  return (\n    <div>\n      <Button variant=\"outline-info\"\n          onClick={onSubmit}\n          disabled={!props.customer || !props.video} >\n            Return\n      </Button>\n    </div>\n  );\n}\n\nCheckIn.propTypes = {\n  customer:PropTypes.number,\n  video: PropTypes.object,\n  checkInCallback: PropTypes.func.isRequired,\n};\n\nexport default CheckIn;","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport axios from 'axios';\nimport Search from './components/Search';\nimport Library from './components/Library';\nimport Customers from './components/Customers';\nimport vhs from './VHS.jpg';\nimport popcorn from './popcorn.png';\nimport cow from './cow.png';\nimport './App.css';\nimport CheckOut from './components/CheckOut';\nimport CheckIn from './components/CheckIn';\nimport { Navbar, Nav, NavLink,Form, FormControl, Button, Image, Table } from 'react-bootstrap'\nimport {LinkContainer} from 'react-router-bootstrap'\n\n\n\n// base url depents on the link of rails server\nconst BASE_URL = 'https://git.heroku.com/moovie-store.git/'\n\nconst App = () => {\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const chooseVideo = (videoData) => {\n    setSelectedVideo(videoData);\n    setErrorMessage(null);\n  }\n\n  const chooseCustomer = (id) => {\n    setSelectedCustomer(id.id);\n    setErrorMessage(null);\n  }\n\n  const checkOut = (rental) => {\n    // console.log(rental.dueDate)\n    // if (rental.video.availableInventory > 0) {\n      axios.post(`${BASE_URL}rentals/${rental.video.title}/check-out?customer_id=${rental.customer}&due_date=${rental.dueDate}`, rental)\n      .then((response) => {\n        setErrorMessage(`Successufully checked out ${rental.video.title}`);\n      })\n      .catch((error) => {\n        // setErrorMessage(error.message);\n        setErrorMessage(`Checkout unsuccessful`);\n      });\n    //   setSelectedVideo(null)\n    //   setSelectedCustomer(null)\n    // }\n    setSelectedVideo(null)\n    setSelectedCustomer(null)\n  }\n\n  const checkIn = (rental) => {\n    axios.post(`${BASE_URL}rentals/${rental.video.title}/return?customer_id=${rental.customer}&returned=true`, rental)\n    .then((response) => {\n      setErrorMessage('Return completed!');\n    })\n    .catch((error) => {\n      // setErrorMessage(error.message);\n      setErrorMessage(`Return unsuccessful: this customer didn't rent ${rental.video.title}`);\n    });\n\n    setSelectedVideo(null)\n    setSelectedCustomer(null)\n  }\n\n  const deselectedVideoSubmit = () => {\n    setSelectedVideo(null)\n  }\n  const deselectedCustomerSubmit = () => {\n    setSelectedCustomer(null)\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={vhs} className=\"App-logo\" alt=\"logo\" />\n\n          <h1 className=\"App-title\">🐮 The Moo-vie Shop! 🐮</h1>\n        </header>\n\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Nav className=\"mr-auto\">\n            <LinkContainer to='/'>\n              <Nav.Link>Home</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to='/library'>\n              <Nav.Link>Videos</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to='/customers'>\n              <Nav.Link>Customers</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to='/search'>\n              <Nav.Link>Search</Nav.Link>\n            </LinkContainer>\n            \n          </Nav>\n\n          <div class='btn'>\n            <CheckOut video={selectedVideo}\n                        customer={selectedCustomer}\n                        checkOutCallback={checkOut} />\n          </div>\n          <div class='btn'>\n            <CheckIn video={selectedVideo}\n                      customer={selectedCustomer}\n                      checkInCallback={checkIn} />\n          </div>\n{/* \n          <div className='selection-statements'>\n            <div className={selectedVideo ? 'selection' : 'no-selection'}>\n              <p>{ selectedVideo ? `Video: ${selectedVideo.title }` : 'Video not selected'}</p>\n              {selectedVideo ? <button\n                  className=\"btn btn-outline-primary btn-sm\"\n                  onClick={deselectedVideoSubmit}>\n                  Deselected Video\n                </button> : ''}\n            </div>\n            <div className={selectedCustomer ? 'selection' : 'no-selection'}>\n              <p>{ selectedCustomer ? `Customer ID: ${selectedCustomer}` : 'Customer not selected'}</p>\n              {selectedCustomer ? <button\n                  className=\"btn btn-outline-primary btn-sm\"\n                  onClick={deselectedCustomerSubmit}>\n                  Deselected Customer\n                </button> : ''}\n            </div>\n          </div> */}\n\n\n        </Navbar>\n        <div className=\"text-lg-center\">\n          <h4 className={errorMessage ? (errorMessage.includes('completed') ? 'text-success border border-success' : 'text-danger border border-danger') : ''}>       \n            {errorMessage ? `${errorMessage}` : ''}\n          </h4>\n        </div>\n\n        <table className=\"float-right text-left mt-4\">\n            <tbody>\n              <tr>\n                  <td className={selectedVideo ? 'selection' : 'no-selection'}>\n                    <p>{ selectedVideo ? `Video: ${selectedVideo.title }` : 'Video not selected'}</p>\n                  </td>\n                  <td className=\"text-right\">\n                    {selectedVideo ? <button\n                      className=\"btn btn-outline-primary btn-sm\"\n                      onClick={deselectedVideoSubmit}>\n                      Deselect Video\n                      </button> : <button\n                      className=\"btn btn-outline-primary btn-sm disabled\">\n                      Select a Video </button>}\n                  </td>\n                  <td className=\"visually-hidden\">Video</td>\n              </tr>\n              <tr>\n                  <td className={selectedCustomer ? 'selection' : 'no-selection'}>\n                    <p>{ selectedCustomer ? `Customer ID: ${selectedCustomer}` : 'Customer not selected'}</p>\n                  </td>\n                  <td className=\"text-right\">\n                    {selectedCustomer ? <button\n                    className=\"btn btn-outline-primary btn-sm\"\n                    onClick={deselectedCustomerSubmit}>\n                    Deselect Customer\n                    </button> : <button\n                    className=\"btn btn-outline-primary btn-sm disabled\">\n                    Select a Customer </button> }\n                  </td>\n              </tr>      \n            </tbody>\n          </table>\n\n        <Switch>\n          <Route path=\"/search\" component={Search}>\n            <Search url={BASE_URL}\n                    focus='videos'/>\n          </Route>\n          <Route path=\"/library\" component={Library}>\n            <Library url={BASE_URL}\n                       focus='videos/'\n                       selectVideoCallback={chooseVideo}\n                       selectedVideo={selectedVideo}/>\n          </Route>\n          <Route path=\"/customers\" component={Customers}>\n            <Customers url={BASE_URL}\n                       focus='customers'\n                       selectCustomerCallback={chooseCustomer}/>\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\nfunction Home() {\n  return (\n    <div>\n      <img src={popcorn} alt=\"movie snacks\" />\n      <img src={cow} alt=\"cow\" className='cow'/>\n    </div>\n    )\n\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}